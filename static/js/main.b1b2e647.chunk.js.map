{"version":3,"sources":["SinceVersion.js","Dialogs.js","FileSelector.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["SinceVersion","props","semver","current","since","children","useStyles","makeStyles","theme","appBar","position","title","marginLeft","spacing","root","width","container","useStylesReddit","border","overflow","borderRadius","backgroundColor","transition","transitions","create","borderColor","palette","primary","main","focused","Transition","React","forwardRef","ref","Slide","direction","getVersionIncrement","message","incr","indexOf","startsWith","DiffDialog","classes","txtClasses","useState","undefined","commitMessage","setCommitMessage","setIncr","diffUrl","diffFiles","setDiffFiles","isLoading","setIsLoading","isError","setIsError","useEffect","a","fetch","result","parseDiff","text","fetchData","useDiffChangesApi","url","label","actionLabel","onAction","onClose","filter","mid","style","flex","commit","TextField","InputProps","disableUnderline","placeholder","marginRight","color","variant","value","onChange","target","AppBar","className","dialogAppBar","Toolbar","IconButton","edge","onClick","aria-label","Typography","Button","CircularProgress","progress","map","file","oldRevision","newRevision","type","hunks","newPath","key","viewType","diffType","PublishDialog","Dialog","fullscreen","TransitionComponent","open","CommitDialog","checkMdocr","callback","res","json","setTimeout","bind","this","IntroDialog","onMdocr","aria-labelledby","display","justifyContent","paddingTop","src","alt","DialogTitle","id","textAlign","DialogContent","minHeight","borderRight","padding","href","uiVersion","substr","fontSize","WelcomeDialog","alert","addMode","setAddMode","setFilter","columns","align","minWidth","rows","Object","keys","mdocr","files","p","code","version","latest","left","bottom","zIndex","flexDirection","flexGrow","path","repository","startIcon","endAdornment","InputAdornment","evt","TableContainer","Table","stickyHeader","size","TableHead","TableRow","column","TableCell","TableBody","row","hover","role","tabIndex","onDoubleClick","format","margin","AddDialog","handleClose","onAdd","filename","setFilename","setTitle","required","event","defaultValue","fullWidth","DialogActions","disabled","endsWith","DeleteConfirmationDialog","aria-describedby","input","height","valueContainer","flexWrap","alignItems","chip","chipFocused","emphasize","grey","noOptionsMessage","singleValue","paper","marginTop","right","divider","inputComponent","inputRef","components","Control","innerProps","innerRef","selectProps","TextFieldProps","inputProps","Menu","Paper","square","NoOptionsMessage","Option","MenuItem","selected","isFocused","component","fontWeight","isSelected","Placeholder","SingleValue","ValueContainer","FileSelector","selectStyles","base","font","NoSsr","styles","inputId","InputLabelProps","htmlFor","shrink","menuPlacement","menuPosition","options","drafts","i","action","pdfjs","GlobalWorkerOptions","workerSrc","updateInterval","previewInterval","paddingBottom","list","marginBottom","subheader","background","top","grow","fabButtons","App","defaultSize","parseInt","localStorage","getItem","window","innerWidth","setMdocr","setValue","meta","setMeta","displayMeta","setDisplayMeta","setCurrent","preview","setPreview","numPages","setNumPages","previewEnable","setPreviewEnable","previewContent","setPreviewContent","previewLoading","setPreviewLoading","commitMode","setCommitMode","publishMode","setPublishMode","deleteConfirmation","setDeleteConfirmation","previewScrollTop","setPreviewScrollTop","previewCounter","setPreviewCounter","splitPos","setSplitPos","useRef","setRef","useCallback","node","document","getElementById","scrollTop","getPreviewContent","prev","items","getElementsByClassName","length","arrayBuffer","previewElement","addComponent","addHandler","method","body","JSON","stringify","j","md","dangerouslySetInnerHTML","__html","replace","pages","pagesLoaded","push","pageNumber","onLoadSuccess","refreshCurrent","curMeta","listCommands","commands","getDefaultCommands","name","buttonProps","icon","execute","state0","api","keyCommand","val","overlaysPos","previewEnableButton","split","setItem","clearTimeout","isDirty","interval","minEditorHeight","generateMarkdownPreview","markdown","gitPath","cursor","values","borderBottom","paddingRight","blob","content","pop","download","validation","Boolean","location","hostname","match","createMuiTheme","ReactDOM","render","ThemeProvider","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","e","Error","resolve","module","exports"],"mappings":"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","file":"static/js/main.b1b2e647.chunk.js","sourcesContent":["import React from \"react\";\nimport * as semver from \"semver\";\n\nexport function SinceVersion(props) {\n  if (semver.gte(props.current, props.since)) {\n    return <div>{props.children}</div>;\n  }\n  return <div></div>;\n}\n","import AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport React from \"react\";\nimport { Diff, parseDiff } from \"react-diff-view\";\nimport \"react-diff-view/style/index.css\";\nimport * as semver from \"semver\";\nimport { SinceVersion } from \"./SinceVersion\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n  },\n  root: {\n    width: \"100%\",\n  },\n  container: {},\n}));\n\nconst useStylesReddit = makeStyles((theme) => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\",\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  focused: {},\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction getVersionIncrement(message) {\n  let incr = 1;\n  if (message.indexOf(\"BREAKING\") >= 0) {\n    incr = 100;\n  } else if (message.startsWith(\"feature:\") || message.startsWith(\"feat:\") || message.startsWith(\"feat(\")) {\n    incr = 10;\n  }\n  if (message.startsWith(\"release:\")) {\n    incr = 1;\n  }\n  return incr;\n}\n\nconst useDiffChangesApi = (diffUrl) => {\n  const [diffFiles, setDiffFiles] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isError, setIsError] = React.useState(false);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const result = await fetch(diffUrl);\n        setDiffFiles(parseDiff(await result.text()));\n      } catch (error) {\n        setIsError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, [diffUrl]);\n\n  return { diffFiles, isLoading, isError };\n};\n\nexport function DiffDialog(props) {\n  const classes = useStyles();\n  const txtClasses = useStylesReddit();\n  const [commitMessage, setCommitMessage] = React.useState(undefined);\n  const [incr, setIncr] = React.useState(1);\n\n  const { diffFiles, isLoading } = useDiffChangesApi(`${props.url}${props.diffUrl}?incr=${incr}`);\n\n  const label = props.label || \"Commit changes\";\n  const actionLabel = props.actionLabel || \"commit\";\n  const renderFile = (file) => {\n    const { oldRevision, newRevision, type, hunks } = file;\n    return [\n      <Typography variant=\"h6\" className={classes.title}>\n        {file.newPath}\n      </Typography>,\n      <Diff key={oldRevision + \"-\" + newRevision} viewType=\"split\" diffType={type} hunks={hunks} />,\n    ];\n  };\n\n  const onClose = () => {\n    if (props.onClose) {\n      props.onClose();\n    }\n  };\n\n  const onAction = async () => {\n    if (props.onAction && (await props.onAction(commitMessage))) {\n      if (props.onClose) {\n        props.onClose();\n      }\n    }\n  };\n\n  const filter = props.filter || (() => true);\n  // Move this one\n  let mid = <div style={{ flex: 1 }} />;\n  if (props.commit) {\n    mid = (\n      <TextField\n        InputProps={{ classes: txtClasses, disableUnderline: true }}\n        label=\"Conventional Commit Message\"\n        placeholder=\"feature: my new awesome feature\"\n        style={{ flex: 1, marginLeft: 30, marginRight: 30, color: \"white\" }}\n        variant=\"filled\"\n        value={commitMessage}\n        onChange={({ target: { value } }) => {\n          if (incr !== getVersionIncrement(value)) {\n            setIncr(getVersionIncrement(value));\n          }\n          setCommitMessage(value);\n        }}\n      />\n    );\n  }\n  return (\n    <div>\n      <AppBar className={classes.dialogAppBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {label}\n          </Typography>\n          {mid}\n          <Button color=\"inherit\" onClick={onAction}>\n            {actionLabel}\n          </Button>\n        </Toolbar>\n      </AppBar>\n      {isLoading ? <CircularProgress className={classes.progress} /> : (diffFiles || []).filter(filter).map(renderFile)}\n    </div>\n  );\n}\n\nexport function PublishDialog(props) {\n  return (\n    <Dialog fullscreen {...props} TransitionComponent={Transition}>\n      {props.open ? (\n        <DiffDialog\n          label=\"Publish new versions\"\n          filter={(file) => {\n            return true || file.newPath.startsWith(\"current/\"); // TODO Should be variable - no filter for now\n          }}\n          actionLabel=\"publish\"\n          diffUrl=\"/release\"\n          {...props}\n        />\n      ) : null}\n    </Dialog>\n  );\n}\n\nexport function CommitDialog(props) {\n  return (\n    <Dialog fullscreen {...props} TransitionComponent={Transition}>\n      {props.open ? (\n        <DiffDialog label=\"Commit changes\" actionLabel=\"commit\" diffUrl=\"/changes\" commit {...props} />\n      ) : null}\n    </Dialog>\n  );\n}\n\nasync function checkMdocr(url, callback) {\n  try {\n    let res = await fetch(`${url}/mdocr`);\n    callback(await res.json());\n  } catch (err) {\n    setTimeout(checkMdocr.bind(this, url, callback), 1000);\n  }\n}\n\nexport function IntroDialog(props) {\n  checkMdocr(props.url, props.onMdocr);\n  return (\n    <div aria-labelledby=\"responsive-dialog-title\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          paddingTop: \"30px\",\n        }}\n      >\n        <img src=\"mdocR.svg\" alt=\"MdocR Logo\" style={{ width: \"200px\" }} />\n      </div>\n      <DialogTitle id=\"responsive-dialog-title\" style={{ color: \"#3399cc\", textAlign: \"center\" }}>\n        Repository Editor\n      </DialogTitle>\n      <DialogContent>\n        <div style={{ display: \"flex\", width: \"100%\", minHeight: \"100%\" }}>\n          <div\n            style={{\n              borderRight: \"2px solid #3399cc\",\n              padding: \"10px\",\n              width: \"50%\",\n              minHeight: \"calc(100% - 260px)\",\n            }}\n          >\n            <div className=\"dlgContent\">\n              MDocr Editor Version:{\" \"}\n              <a href={`https://github.com/loopingz/mdocr/tree/${props.uiVersion}`} target=\"_blank\">\n                {props.uiVersion.substr(0, 7)}\n              </a>\n            </div>\n            <div className=\"dlgContent\">You can use MDocr to manage your Markdown documents in a Git repository.</div>\n            <div className=\"dlgContent\">\n              <h3>Install requirements</h3>\n              <ul>\n                <li>NodeJS</li>\n                <li>Git client</li>\n                <li>\n                  Install MDocR binary\n                  <pre>npm install -g mdocr</pre>\n                  <span style={{ fontSize: \"8px\" }}>OR</span>\n                  <pre>yarn global add mdocr</pre>\n                </li>\n              </ul>\n            </div>\n            <div className=\"dlgContent\">\n              <h3>Initiate a repository</h3>\n              <pre>git init</pre>\n            </div>\n            <div className=\"dlgContent\">\n              <h3>Launch in your repository</h3>\n              <pre>mdocr edit</pre>\n            </div>\n          </div>\n          <div style={{ padding: \"10px\", width: \"50%\" }}>\n            <div className=\"dlgContent\">\n              MDocR use conventional commits to generate the version of the document. It also give you the ability to\n              pull datas from your own systems to automate some contents\n            </div>\n            <div className=\"dlgContent\">\n              <h3>Conventional commits</h3>\n              What is conventional commits?\n            </div>\n            <div className=\"dlgContent\">\n              <h3>Integrations</h3>\n            </div>\n            <div className=\"dlgContent\">\n              <h3>Publish</h3>\n              Once the documents are ready to publish, you can publish and activate the post publish actions\n            </div>\n          </div>\n        </div>\n      </DialogContent>\n    </div>\n  );\n}\n\nexport function WelcomeDialog(props) {\n  const [addMode, setAddMode] = React.useState(false);\n  const [filter, setFilter] = React.useState(\"\");\n\n  const classes = useStyles();\n  const columns = [\n    {\n      label: \"Document\",\n      id: \"path\",\n      align: \"left\",\n      minWidth: 200,\n    },\n    {\n      label: \"Version\",\n      id: \"currentVersion\",\n      align: \"center\",\n    },\n    {\n      label: \"Next Version\",\n      id: \"nextVersion\",\n      align: \"center\",\n    },\n  ];\n  const rows = Object.keys(props.mdocr.files).map((p) => ({ ...props.mdocr.files[p], code: p }));\n  var alert;\n  if (semver.lt(props.mdocr.version, props.mdocr.latest)) {\n    alert = (\n      <div\n        style={{\n          color: \"black\",\n          backgroundColor: \"#ffc107\",\n          position: \"fixed\",\n          left: 0,\n          bottom: 0,\n          width: \"100%\",\n          padding: 20,\n        }}\n      >\n        Your local version ({props.mdocr.version}) of mdocr is not up to date with latest ({props.mdocr.latest})\n      </div>\n    );\n  }\n  return (\n    <div aria-labelledby=\"responsive-dialog-title\">\n      <div style={{ position: \"fixed\", width: \"100%\", backgroundColor: \"white\", zIndex: 3 }}>\n        <div style={{ display: \"flex\", justifyContent: \"center\", paddingTop: \"30px\" }}>\n          <img src=\"mdocR.svg\" alt=\"MdocR Logo\" style={{ width: \"200px\" }} />\n        </div>\n        <DialogTitle id=\"responsive-dialog-title\" style={{ color: \"#3399cc\", textAlign: \"center\" }}>\n          {\"Choose a file to edit\"}\n        </DialogTitle>\n        <DialogContent>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div style={{ flexGrow: 1 }}>\n              <div className=\"dlgContent\">\n                Current path: {props.mdocr.path}\n                <br />\n                Current repository: {props.mdocr.repository}\n                <br />\n                {alert}\n                <br />\n                Please select a file\n              </div>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <SinceVersion current={props.mdocr.version} since=\"2.0.0\">\n                <Button\n                  color=\"primary\"\n                  startIcon={<AddBoxIcon />}\n                  onClick={() => {\n                    setAddMode(true);\n                  }}\n                >\n                  New Document\n                </Button>\n              </SinceVersion>\n              <TextField\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  ),\n                }}\n                label=\"Filter\"\n                value={filter}\n                onChange={(evt) => setFilter(evt.target.value)}\n              />\n            </div>\n          </div>\n        </DialogContent>\n      </div>\n      <DialogContent style={{ paddingTop: \"350px\" }}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\n                    {column.label}\n                  </TableCell>\n                ))}\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows\n                .filter((row) => row.path.indexOf(filter) >= 0)\n                .map((row) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.code}\n                      onDoubleClick={() => {\n                        props.onChange({ ...row, value: row.path, label: row.path });\n                      }}\n                    >\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\" ? column.format(value) : value}\n                          </TableCell>\n                        );\n                      })}\n                      <TableCell key=\"action\">\n                        <IconButton\n                          aria-label=\"edit\"\n                          size=\"small\"\n                          onClick={() => {\n                            props.onChange({ ...row, value: row.path, label: row.path });\n                          }}\n                          className={classes.margin}\n                        >\n                          <EditIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </DialogContent>\n      <AddDialog handleClose={props.onAdd} open={addMode} />\n    </div>\n  );\n}\n\nexport function AddDialog(props) {\n  const [filename, setFilename] = React.useState(\"\");\n  const [title, setTitle] = React.useState(\"\");\n  return (\n    <Dialog onClose={props.handleClose} aria-labelledby=\"simple-dialog-title\" open={props.open}>\n      <DialogTitle id=\"simple-dialog-title\" style={{ color: \"#3399cc\" }}>\n        Add a new document\n      </DialogTitle>\n      <DialogContent>\n        <div className=\"dlgContent\">\n          The document will be added to your repository, filename should include the path.\n        </div>\n        <div>\n          <TextField\n            required\n            value={filename}\n            onChange={(event) => {\n              setFilename(event.target.value);\n            }}\n            id=\"filename\"\n            label=\"Filename (with .md)\"\n            defaultValue=\"\"\n            variant=\"filled\"\n            fullWidth\n          />\n        </div>\n        <div>\n          <TextField\n            required\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n            id=\"title\"\n            label=\"Title\"\n            defaultValue=\"\"\n            variant=\"filled\"\n            fullWidth\n          />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose}>Cancel</Button>\n        <Button\n          disabled={!(filename && filename.endsWith(\".md\") && title)}\n          onClick={() => props.handleClose(filename, title)}\n          color=\"primary\"\n        >\n          Create\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport function DeleteConfirmationDialog(props) {\n  return (\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle id=\"alert-dialog-slide-title\">{\"Delete confirmation?\"}</DialogTitle>\n      <DialogContent>\n        <div className=\"dlgContent\" id=\"alert-dialog-slide-description\">\n          Are you sure you want to delete this document, its built and published versions?\n          <br />\n          <br />\n          {props.file}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.handleClose(false)}>Cancel</Button>\n        <Button onClick={() => props.handleClose(true)} style={{ color: \"red\" }}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import MenuItem from \"@material-ui/core/MenuItem\";\nimport NoSsr from \"@material-ui/core/NoSsr\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { emphasize, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Select from \"react-select\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minWidth: \"50%\",\n  },\n  input: {\n    display: \"flex\",\n    padding: 0,\n    height: \"auto\",\n    color: \"white\",\n  },\n  valueContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flex: 1,\n    alignItems: \"center\",\n    overflow: \"hidden\",\n    color: \"white\",\n  },\n  chip: {\n    margin: theme.spacing(0.5, 0.25),\n  },\n  chipFocused: {\n    backgroundColor: emphasize(\n      theme.palette.type === \"light\" ? theme.palette.grey[300] : theme.palette.grey[700],\n      0.08\n    ),\n  },\n  noOptionsMessage: {\n    padding: theme.spacing(1, 2),\n  },\n  singleValue: {\n    fontSize: 16,\n  },\n  placeholder: {\n    position: \"absolute\",\n    left: 2,\n    bottom: 6,\n    fontSize: 16,\n    color: \"white\",\n  },\n  paper: {\n    position: \"absolute\",\n    zIndex: 1,\n    marginTop: theme.spacing(1),\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  divider: {\n    height: theme.spacing(2),\n  },\n}));\n\nfunction NoOptionsMessage(props) {\n  return (\n    <Typography color=\"textSecondary\" className={props.selectProps.classes.noOptionsMessage} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nNoOptionsMessage.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * Props to be passed on to the wrapper.\n   */\n  innerProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction inputComponent({ inputRef, ...props }) {\n  return <div ref={inputRef} {...props} />;\n}\n\ninputComponent.propTypes = {\n  inputRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired,\n    }),\n  ]),\n};\n\nfunction Option(props) {\n  return (\n    <MenuItem\n      ref={props.innerRef}\n      selected={props.isFocused}\n      component=\"div\"\n      style={{\n        fontWeight: props.isSelected ? 500 : 400,\n      }}\n      {...props.innerProps}\n    >\n      {props.children}\n    </MenuItem>\n  );\n}\n\nOption.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * props passed to the wrapping element for the group.\n   */\n  innerProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onMouseMove: PropTypes.func.isRequired,\n    onMouseOver: PropTypes.func.isRequired,\n    tabIndex: PropTypes.number.isRequired,\n  }).isRequired,\n  /**\n   * Inner ref to DOM Node\n   */\n  innerRef: PropTypes.oneOfType([\n    PropTypes.oneOf([null]),\n    PropTypes.func,\n    PropTypes.shape({\n      current: PropTypes.any.isRequired,\n    }),\n  ]).isRequired,\n  /**\n   * Whether the option is focused.\n   */\n  isFocused: PropTypes.bool.isRequired,\n  /**\n   * Whether the option is selected.\n   */\n  isSelected: PropTypes.bool.isRequired,\n};\n\nfunction SingleValue(props) {\n  return (\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n      {props.children}\n    </Typography>\n  );\n}\n\nSingleValue.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the wrapping element for the group.\n   */\n  innerProps: PropTypes.any,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Placeholder(props) {\n  const { selectProps, innerProps = {}, children } = props;\n  return (\n    <Typography color=\"textSecondary\" className={selectProps.classes.placeholder} {...innerProps}>\n      {children}\n    </Typography>\n  );\n}\n\nPlaceholder.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  /**\n   * props passed to the wrapping element for the group.\n   */\n  innerProps: PropTypes.object,\n  selectProps: PropTypes.object.isRequired,\n};\nfunction ValueContainer(props) {\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nValueContainer.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.node,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Menu(props) {\n  return (\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n      {props.children}\n    </Paper>\n  );\n}\n\nMenu.propTypes = {\n  /**\n   * The children to be rendered.\n   */\n  children: PropTypes.element.isRequired,\n  /**\n   * Props to be passed to the menu wrapper.\n   */\n  innerProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired,\n};\n\nfunction Control(props) {\n  const {\n    children,\n    innerProps,\n    innerRef,\n    selectProps: { classes, TextFieldProps },\n  } = props;\n\n  return (\n    <TextField\n      fullWidth\n      InputProps={{\n        classes: { input: classes.input },\n        inputComponent,\n        inputProps: {\n          className: classes.input,\n          ref: innerRef,\n          children,\n          ...innerProps,\n        },\n      }}\n      {...TextFieldProps}\n    />\n  );\n}\n\nconst components = {\n  Control,\n  Menu,\n  NoOptionsMessage,\n  Option,\n  Placeholder,\n  SingleValue,\n  ValueContainer,\n};\n\nexport default function FileSelector(props) {\n  const classes = useStyles();\n  const selectStyles = {\n    input: (base) => ({\n      ...base,\n      color: \"white\",\n      \"& input\": {\n        font: \"inherit\",\n        color: \"white\",\n      },\n    }),\n  };\n\n  return (\n    <div className={classes.root}>\n      <NoSsr>\n        <Select\n          classes={classes}\n          styles={selectStyles}\n          inputId=\"react-select-single\"\n          TextFieldProps={{\n            label: \"File\",\n            InputLabelProps: {\n              htmlFor: \"react-select-single\",\n              shrink: true,\n              style: { color: \"white\" },\n            },\n          }}\n          menuPlacement=\"top\"\n          menuPosition=\"fixed\"\n          components={components}\n          placeholder=\"Search for a file to edit\"\n          options={props.drafts.map((i) => ({\n            label: i.path,\n            value: i.path,\n            ...i,\n          }))}\n          value={props.value}\n          onChange={(value, action) => {\n            if (props.onChange) {\n              props.onChange(value);\n            }\n          }}\n        />\n      </NoSsr>\n    </div>\n  );\n}\n\n/*\n\n\n        */\n","import AppBar from \"@material-ui/core/AppBar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FormatIndentDecreaseIcon from \"@material-ui/icons/FormatIndentDecrease\";\nimport FormatIndentIncreaseIcon from \"@material-ui/icons/FormatIndentIncrease\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport * as download from \"downloadjs\";\nimport CommitIcon from \"mdi-material-ui/SourceCommitLocal\";\nimport React, { useCallback, useRef } from \"react\";\nimport ReactMde, { commands } from \"react-mde\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport Select from \"react-select\";\nimport SplitPane from \"react-split-pane\";\nimport \"./App.css\";\nimport { AddDialog, CommitDialog, DeleteConfirmationDialog, IntroDialog, PublishDialog, WelcomeDialog } from \"./Dialogs\";\nimport FileSelector from \"./FileSelector\";\nimport { SinceVersion } from \"./SinceVersion\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst commit = \"ac993b378febbdc16bf313110db9e4aa47b1ffe2\";\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    margin: theme.spacing(2),\n  },\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  dialogAppBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButtons: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nlet updateInterval;\nlet previewInterval;\n\nexport default function App() {\n  // Autosuggest will call this function every time you need to update suggestions.\n  // You already implemented this logic above, so just use it.\n  const defaultSize = parseInt(localStorage.getItem(\"splitPos\") || window.innerWidth / 2, 10);\n  const [mdocr, setMdocr] = React.useState();\n  const url = \"http://localhost:18181\";\n  const [value, setValue] = React.useState(\"\");\n  const [meta, setMeta] = React.useState(\"\");\n  const [displayMeta, setDisplayMeta] = React.useState(false);\n  const [current, setCurrent] = React.useState(null);\n  const [preview, setPreview] = React.useState(null);\n  const [numPages, setNumPages] = React.useState(0);\n  const [previewEnable, setPreviewEnable] = React.useState(true);\n  const [previewContent, setPreviewContent] = React.useState(null);\n  const [previewLoading, setPreviewLoading] = React.useState(false);\n  const [commitMode, setCommitMode] = React.useState(false);\n  const [publishMode, setPublishMode] = React.useState(false);\n  const [addMode, setAddMode] = React.useState(false);\n  const [deleteConfirmation, setDeleteConfirmation] = React.useState(false);\n  const [previewScrollTop, setPreviewScrollTop] = React.useState(0);\n  const [previewCounter, setPreviewCounter] = React.useState(0);\n  const [splitPos, setSplitPos] = React.useState(defaultSize);\n  const classes = useStyles();\n  const ref = useRef(null);\n\n  const setRef = useCallback(\n    (node) => {\n      if (window.document.getElementById(\"preview\")) {\n        window.document.getElementById(\"preview\").scrollTop = previewScrollTop;\n      } else if (ref.current) {\n        // Make sure to cleanup any events/references added to the last instance\n\n        ref.current.scrollTop = previewScrollTop;\n      }\n      if (node) {\n        // Check if a node is actually passed. Otherwise node would be null.\n        // You can now do what you need to, addEventListeners, measure, etc.\n      }\n      // Save a reference to the node\n      ref.current = node;\n    },\n    [previewScrollTop]\n  );\n  if (!mdocr) {\n    return <IntroDialog uiVersion={commit} onMdocr={setMdocr} url={url} />;\n  }\n\n  const getPreviewContent = async (prev) => {\n    if (prev.value === \"none\") return;\n    if (prev.value === \"pdf\") {\n      let items = document.getElementsByClassName(\"react-pdf__Document\");\n      if (items.length) {\n        setPreviewScrollTop(items[0].scrollTop);\n      } else {\n        setPreviewScrollTop(0);\n      }\n    } else {\n      let p = document.getElementById(\"preview\");\n      setPreviewScrollTop(p ? p.scrollTop : 0);\n    }\n    setPreviewCounter(previewCounter + 1);\n    setPreviewLoading(true);\n    let res = await fetch(`${url}/${prev.value}/${current.path}`);\n    if (prev.value === \"pdf\") {\n      setPreviewContent(await res.arrayBuffer());\n    } else {\n      setPreviewContent(await res.text());\n    }\n    setPreviewLoading(false);\n  };\n\n  let previewElement = <SearchIcon style={{ width: \"128px\", height: \"128px\", color: \"#999\" }} />;\n  let addComponent = false;\n  const addHandler = async (filename, title) => {\n    setAddMode(false);\n    if (filename && title) {\n      let res = await fetch(`${url}/drafts/${filename}`, {\n        method: \"POST\",\n        body: JSON.stringify({ title }),\n      });\n      let md = await res.json();\n      setMdocr(md);\n      let j;\n      for (j in md.files) {\n        if (md.files[j].path === filename) {\n          setCurrent(md.files[j]);\n        }\n      }\n    }\n  };\n\n  if (previewLoading) {\n    addComponent = true;\n    previewElement = <CircularProgress className={classes.progress} />;\n  } else if (preview && preview.value !== \"none\") {\n    if (preview.value === \"build\") {\n      previewElement = (\n        <pre id=\"preview\" className=\"buildContent\" ref={setRef}>\n          {previewContent}\n        </pre>\n      );\n    } else if (preview.value === \"html\") {\n      previewElement = (\n        <div\n          id=\"preview\"\n          className=\"previewContent\"\n          ref={setRef}\n          style={{ padding: 10 }}\n          dangerouslySetInnerHTML={{ __html: previewContent.replace(/<style>[\\w\\W]*<\\/style>/gm, \"\") }}\n        />\n      );\n    } else if (preview.value === \"pdf\") {\n      let pages = [];\n      let pagesLoaded = 0;\n      for (let i = 1; i <= numPages; i++) {\n        pages.push(\n          <Page\n            id={i}\n            pageNumber={i}\n            onLoadSuccess={() => {\n              pagesLoaded++;\n              if (pagesLoaded === numPages) {\n                let items = document.getElementsByClassName(\"react-pdf__Document\");\n                if (items.length) {\n                  items[0].scrollTop = previewScrollTop;\n                }\n              }\n            }}\n          />\n        );\n      }\n      previewElement = (\n        <Document\n          file={previewContent}\n          onLoadSuccess={({ numPages }) => {\n            setNumPages(numPages);\n          }}\n        >\n          {pages}\n        </Document>\n      );\n    }\n  } else {\n    addComponent = true;\n  }\n\n  if (addComponent) {\n    previewElement = (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: \"absolute\",\n          width: \"100%\",\n          bottom: \"60px\",\n          top: \"48px\",\n        }}\n      >\n        {previewElement}\n      </div>\n    );\n  }\n  const onMarkdownChange = (val) => {\n    setValue(val);\n    if (updateInterval) {\n      clearTimeout(updateInterval);\n    }\n    updateInterval = setTimeout(async () => {\n      let body;\n      if (displayMeta) {\n        body = val;\n      } else {\n        body = meta + val;\n      }\n      await fetch(`${url}/drafts/${current.path}`, {\n        method: \"PUT\",\n        body,\n      });\n      setMdocr({ ...mdocr, isDirty: true });\n      if (preview) {\n        if (previewInterval) {\n          clearTimeout(previewInterval);\n        }\n        let interval = 5000;\n        if (preview.value === \"build\") {\n          interval = 100;\n        }\n        previewInterval = setTimeout(() => {\n          if (preview) {\n            getPreviewContent(preview);\n          }\n        }, interval);\n      }\n    }, 1000);\n  };\n\n  const refreshCurrent = async (file = current) => {\n    if (!file) {\n      return;\n    }\n    let res = await fetch(`${url}/drafts/${file.path}`);\n    let md = await res.text();\n    if (md.startsWith(\"---\")) {\n      let curMeta = md.substr(0, md.substr(3).indexOf(\"---\") + 7);\n      setMeta(curMeta);\n      md = md.substr(curMeta.length);\n    }\n    setValue(md);\n    if (preview) {\n      getPreviewContent(preview);\n    }\n  };\n\n  if (!current && mdocr) {\n    return (\n      <WelcomeDialog\n        uiVersion={commit}\n        mdocr={mdocr}\n        onAdd={addHandler}\n        onChange={async (value) => {\n          setCurrent(value);\n          refreshCurrent(value);\n        }}\n      />\n    );\n  }\n  let listCommands = commands.getDefaultCommands();\n  listCommands.push({\n    commands: [\n      {\n        name: \"metadata\",\n        buttonProps: {\n          \"aria-label\": \"Display Metadata\",\n          color: \"#000\",\n          title: displayMeta ? \"Hide Meta\" : \"Display Meta\",\n        },\n        icon: () => <div>Display Meta</div>,\n        execute: (state0: TextState, api: TextApi) => {\n          setDisplayMeta(!displayMeta);\n        },\n        keyCommand: \"meta\",\n      },\n    ],\n  });\n  let val = value;\n  if (displayMeta) {\n    val = meta + value;\n  }\n  const overlaysPos = previewEnable ? splitPos : window.innerWidth;\n  const previewEnableButton = previewEnable ? <FormatIndentIncreaseIcon /> : <FormatIndentDecreaseIcon />;\n  return (\n    <div>\n      <IconButton\n        onClick={() => setPreviewEnable(!previewEnable)}\n        style={{ zIndex: 2, position: \"fixed\", left: overlaysPos - 40 }}\n      >\n        {previewEnableButton}\n      </IconButton>\n      <SplitPane\n        split=\"vertical\"\n        defaultSize={defaultSize}\n        size={previewEnable ? splitPos : window.innerWidth}\n        onChange={(size) => {\n          localStorage.setItem(\"splitPos\", size);\n          setSplitPos(size);\n        }}\n      >\n        <div>\n          <ReactMde\n            value={val}\n            onChange={onMarkdownChange}\n            minEditorHeight=\"inherit\"\n            commands={listCommands}\n            generateMarkdownPreview={async (markdown) => {\n              if (!current) {\n                return \"\";\n              }\n              let res = await fetch(`${url}/build/${current.gitPath}`);\n              return `<pre>${await res.text()}</pre>`;\n            }}\n          />\n          <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n            <Toolbar>\n              <div\n                title=\"Welcome Panel\"\n                onClick={() => {\n                  setCurrent(undefined);\n                }}\n                style={{\n                  cursor: \"pointer\",\n                  position: \"fixed\",\n                  bottom: \"60px\",\n                  left: overlaysPos - (previewEnable ? 32 : 80),\n                }}\n              >\n                <img src=\"mdocR.svg\" alt=\"MdocR Logo\" style={{ width: \"64px\" }} />\n              </div>\n              <SinceVersion current={mdocr.version} since=\"2.0.0\">\n                <IconButton color=\"inherit\" onClick={() => setDeleteConfirmation(true)} style={{ marginLeft: \"-24px\" }}>\n                  <DeleteIcon />\n                </IconButton>\n              </SinceVersion>\n              <FileSelector\n                drafts={Object.values(mdocr.files)}\n                onChange={async (value) => {\n                  setCurrent(value);\n                  refreshCurrent(value);\n                }}\n                value={current}\n              />\n              <SinceVersion current={mdocr.version} since=\"2.0.0\">\n                <IconButton color=\"inherit\" onClick={() => setAddMode(true)}>\n                  <AddIcon />\n                </IconButton>\n              </SinceVersion>\n              <div className={classes.grow}>Repository: {mdocr.path}</div>\n              <IconButton disabled={!mdocr.isDirty} color=\"inherit\" onClick={() => setCommitMode(true)}>\n                <CommitIcon />\n              </IconButton>\n              <IconButton edge=\"end\" color=\"inherit\" disabled={mdocr.isDirty} onClick={() => setPublishMode(true)}>\n                <PublishIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <div>\n          <div\n            style={{\n              backgroundColor: \"#f9f9f9\",\n              display: \"flex\",\n              height: \"44px\",\n              borderBottom: \"1px solid #c8ccd0\",\n              borderRadius: \"2px 2px 0 0\",\n            }}\n          >\n            <div style={{ padding: 10 }}>Preview</div>\n            <div style={{ paddingRight: 10, paddingTop: 3, flexGrow: 1 }}>\n              <Select\n                value={preview}\n                onChange={(value) => {\n                  if (previewInterval) {\n                    clearTimeout(previewInterval);\n                  }\n                  setPreviewScrollTop(0);\n                  setPreview(value);\n                  getPreviewContent(value);\n                }}\n                placeholder=\"Select a type of preview\"\n                options={[\n                  { label: \"PDF\", value: \"pdf\" },\n                  { label: \"HTML\", value: \"html\" },\n                  { label: \"Markdown\", value: \"build\" },\n                  { label: \"-\", value: \"none\" },\n                ]}\n              />\n            </div>\n            <div>\n              <IconButton\n                color=\"inherit\"\n                onClick={() => {\n                  getPreviewContent(preview);\n                }}\n                disabled={!preview || preview.value === \"none\"}\n              >\n                <RefreshIcon />\n              </IconButton>\n              <IconButton\n                color=\"inherit\"\n                onClick={async () => {\n                  let prev = preview.value;\n                  let res = await fetch(`${url}/${prev}/${current.path}`);\n                  let content = await res.blob();\n                  let file = current.path.split(\"/\").pop();\n                  if (prev === \"pdf\") {\n                    download(content, `${file}.pdf`, \"application/octect-stream\");\n                  } else if (prev === \"html\") {\n                    download(content, `${file}.html`, \"text/html\");\n                  } else if (prev === \"build\") {\n                    download(content, `${file}.md`, \"text/plain\");\n                  }\n                }}\n                disabled={!preview || preview.value === \"none\"}\n              >\n                <SaveIcon />\n              </IconButton>\n            </div>\n          </div>\n          {previewElement}\n        </div>\n      </SplitPane>\n\n      <PublishDialog\n        open={publishMode}\n        onClose={() => setPublishMode(false)}\n        url={url}\n        onAction={async () => {\n          await fetch(`${url}/release`, {\n            method: \"PUT\",\n          });\n          await refreshCurrent();\n          return true;\n        }}\n      />\n\n      <CommitDialog\n        open={commitMode}\n        onClose={() => setCommitMode(false)}\n        url={url}\n        onAction={async (message) => {\n          await fetch(`${url}/commit`, {\n            method: \"PUT\",\n            body: JSON.stringify({ message }),\n          });\n          setMdocr({ ...mdocr, isDirty: false });\n          return true;\n        }}\n      />\n\n      <AddDialog mdocr={mdocr} handleClose={addHandler} open={addMode} />\n      <DeleteConfirmationDialog\n        handleClose={async (validation) => {\n          setDeleteConfirmation(false);\n          if (validation) {\n            let res = await fetch(`${url}/drafts/${current.path}`, {\n              method: \"DELETE\",\n            });\n            setMdocr({ ...(await res.json()) });\n            setCurrent(undefined);\n          }\n        }}\n        file={current.path}\n        open={deleteConfirmation}\n      />\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#3399cc\" }\n  }\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;"],"sourceRoot":""}